clear all;
if ~contains(path,'code_wake;')
    addpath('code_wake');
end 
%% Solver & Algorithm list
[method,alg,bflow,de_singularize,do_balancing,eig_spectrum,~,H,k,Fr2,Re,eps,~,h,f] = pars_wake(2);
N = 300:100:1500;
zL = 0.74708299;
%% Run solver
tic;
zL = case1.criticalH(c0);
addvar = struct('zL1',zL,'eps',eps);
oi = nan(length(k),length(N));
oi = nan(length(k),length(N));
parfor j = 1:length(k)
    fprintf('k = %.2f\n',k(j));
    case1 = wSubmerged(100,H,k(j),h(j),Re,Fr2);
    case1.numMeth(method);
    for i = 1:length(N)
        case1.N = N(i);
        [o,~,cAall(j,i)] = case1.solver(alg, de_singularize, do_balancing, eig_spectrum, f, addvar);
        oi(j,i) = imag(o(1));
%         fprintf('N = %3d, growth rate = %.8f\n', N(i), oi(i));
    end
%     cAall(j,:) = cA;
%     doi{j} = abs(diff(oi));
%     doi{j} = abs(oi-oi(end));
end
doi = oi-oi(:,end);
toc;
%% Plot figure
figure;
% hold on;
% nam = sprintf('$k = %.2f$',k(1));
nam = sprintf('$Re = %1.1e$',Re);
semilogy(N, cAall(1,:), '-ro', 'Displayname', nam);
hold on;
for i = 2:length(k)
    nam = sprintf('$k = %.2f, ',k(i));
    semilogy(N, cAall(1,:), '-o', 'Displayname', nam);
end
hold off;
xlabel('$N$');
ylabel('$cond(A)$');
legend('location','northeast');
grid on;
%% Plot figure
col = {[0 0 0],[0 0 1],[1 0 0],"#77AC30"};
figure;
semilogy(N, doi{1}, '-k', 'Displayname', sprintf('$k = %.2f$',k(1)));
hold on;
for i = 1:length(k)
    nam = sprintf('$k = %.2f$',k(i));
    semilogy(N, doi{i}, '-o', 'Displayname', nam,'color',col{i});
end
hold off;
xlabel('$N$');
ylabel('$\ | \ \omega_i(N_m) - \omega_i(N_{end})\ |$');
legend('location','northeast');
grid on;